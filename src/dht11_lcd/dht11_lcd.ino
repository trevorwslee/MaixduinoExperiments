#include <Arduino.h>
#include "DHT.h"


#define DHT_PIN 5

DHT dht(DHT_PIN, DHT11); 


#include <Sipeed_ST7789.h>
SPIClass spi_(SPI0); // MUST be SPI0 for Maix series on board LCD
Sipeed_ST7789 lcd(320, 240, spi_);


// 'sunny', 32x32px
// . source: https://github.com/manifestinteractive/weather-underground-icons
// . generated with https://mischianti.org/images-to-byte-array-online-converter-cpp-arduino/
const unsigned char sunny [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0xff, 
	0xff, 0xff, 0x7f, 0xff, 0xff, 0x9f, 0x7e, 0xff, 0xff, 0x8f, 0xf8, 0xff, 0xff, 0xcc, 0x19, 0xff, 
	0xff, 0xf9, 0xcf, 0xff, 0xff, 0xf3, 0xe7, 0xff, 0xff, 0xe7, 0xf3, 0xff, 0xff, 0xef, 0xf3, 0xff, 
	0xf8, 0x2f, 0xfa, 0x1f, 0xff, 0xef, 0xf3, 0xff, 0xff, 0xe7, 0xf3, 0xff, 0xff, 0xf3, 0xe7, 0xff, 
	0xff, 0xf8, 0x8f, 0xff, 0xff, 0xcc, 0x19, 0xff, 0xff, 0xcf, 0xfc, 0xff, 0xff, 0x9f, 0x7e, 0xff, 
	0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

// 'fog', 32x32px
// . source: https://github.com/manifestinteractive/weather-underground-icons
// generated with https://mischianti.org/images-to-byte-array-online-converter-cpp-arduino/
const unsigned char fog [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 
	0xfc, 0x78, 0xff, 0xdf, 0xf9, 0xfe, 0x3f, 0x1f, 0xff, 0xff, 0x80, 0x7f, 0xff, 0x01, 0xf3, 0xff, 
	0xfc, 0x78, 0xff, 0xdf, 0xfd, 0xff, 0x3f, 0x1f, 0xff, 0xef, 0x80, 0x7f, 0xfe, 0x01, 0xf7, 0xff, 
	0xfc, 0x7c, 0x7f, 0xdf, 0xfd, 0xff, 0x1e, 0x1f, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0xe3, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};



void setup() {
  Serial.begin(115200);

  // prepare dht
  dht.begin();

  // prepare lcd
  lcd.begin(15000000, COLOR_BLACK);
  lcd.fillScreen(COLOR_BLACK);
  lcd.setTextColor(COLOR_WHITE);
  lcd.setTextSize(2);

  // draw the icons
  lcd.drawBitmap(10, 50, sunny, 32, 32, COLOR_BLACK, COLOR_WHITE);
  lcd.drawBitmap(10, 100, fog, 32, 32, COLOR_BLACK, COLOR_WHITE);
}

void loop() {
  delay(2000);
  
  // read humidity and temperature
  float h = dht.readHumidity();
  float t = dht.readTemperature();

  // show humidity and temperature to serial
  Serial.print("Humidity: ");
  Serial.print(h);
  Serial.print(" %");
  Serial.print("  /  Temperature: ");
  Serial.print(t);
  Serial.println(" Â°C");
  
  // clear the lcd area where humidity and temperature are shown
  lcd.fillRect(60, 60, 100, 80, COLOR_BLACK);

  // show humidity to the lcd
  lcd.setCursor(60, 60);
  lcd.print(h);
  lcd.print("%");

  // show temperature to the lcd
  lcd.setCursor(60, 110);
  lcd.print(t);
  lcd.print("C");
}
  
